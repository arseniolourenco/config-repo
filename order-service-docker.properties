# order-service-docker.properties
spring.application.name=order-service
server.port=8080

# === EUREKA CONFIGURATION ===
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.enabled=true
eureka.client.healthcheck.enabled=true
eureka.instance.hostname=${ORDER_SERVICE_INSTANCE_HOSTNAME}
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.prefer-ip-address=true

# === POSTGRES DATABASE CONFIGURATION ===
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME_POSTGRES}
spring.datasource.url=${SPRING_DATASOURCE_URL_POSTGRES}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME_POSTGRES}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD_POSTGRES}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO_POSTGRES}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT_POSTGRES}


# === ZIPKIN TRACING CONFIGURATION ===
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${MANAGEMENT_TRACING_ZIPKIN_ENDPOINT}

# === LOGGING CONFIGURATION ====
logging.level.root=INFO
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]
logging.level.com.netflix.discovery=INFO
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.cloud=INFO
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.io.micrometer.tracing=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.brave=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# === MANAGEMENT / HEALTH ===
management.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always

# ===   KAFKA CONFIGURATION   ===
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.template.default-topic=notificationTopic

spring.kafka.producer.group-id=notificationId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.arseniolourenco.order_service.event.OrderPlacedEvent

